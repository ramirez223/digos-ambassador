// <auto-generated />
#pragma warning disable CS1591
// ReSharper disable RedundantArgumentDefaultValue
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantUsingDirective

// <auto-generated />
using System;
using DIGOS.Ambassador.Plugins.Anonymail.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
namespace DIGOS.Ambassador.Plugins.Anonymail.Migrations
{
    [DbContext(typeof(AnonymailDatabaseContext))]
    [Migration("20200622195550_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("AnonymailModule")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);
            modelBuilder.Entity("DIGOS.Ambassador.Plugins.Anonymail.Model.AnonymizedUser", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
                    b.Property<Guid>("IdentityHash")
                        .HasColumnType("uuid");
                    b.HasKey("ID");
                    b.HasIndex("IdentityHash")
                        .IsUnique();
                    b.ToTable("AnonymizedUsers","AnonymailModule");
                });
            modelBuilder.Entity("DIGOS.Ambassador.Plugins.Anonymail.Model.AnonymousMail", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
                    b.Property<long?>("AnonymousMailboxID")
                        .HasColumnType("bigint");
                    b.Property<long>("AuthorID")
                        .HasColumnType("bigint");
                    b.Property<string>("Contents")
                        .IsRequired()
                        .HasColumnType("text");
                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("timestamp with time zone");
                    b.HasKey("ID");
                    b.HasIndex("AnonymousMailboxID");
                    b.HasIndex("AuthorID");
                    b.ToTable("AnonymousMails","AnonymailModule");
                });
            modelBuilder.Entity("DIGOS.Ambassador.Plugins.Anonymail.Model.AnonymousMailbox", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
                    b.Property<long>("DiscordChannelID")
                        .HasColumnType("bigint");
                    b.Property<long>("ServerID")
                        .HasColumnType("bigint");
                    b.HasKey("ID");
                    b.HasIndex("ServerID");
                    b.ToTable("AnonymousMailboxes","AnonymailModule");
                });
            modelBuilder.Entity("DIGOS.Ambassador.Plugins.Anonymail.Model.AnonymousMailboxUser", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
                    b.Property<bool>("IsBlocked")
                        .HasColumnType("boolean");
                    b.Property<long>("MailboxID")
                        .HasColumnType("bigint");
                    b.Property<long>("UserID")
                        .HasColumnType("bigint");
                    b.HasKey("ID");
                    b.HasIndex("MailboxID");
                    b.HasIndex("UserID");
                    b.ToTable("AnonymousMailboxUsers","AnonymailModule");
                });
            modelBuilder.Entity("DIGOS.Ambassador.Plugins.Core.Model.Servers.Server", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
                    b.Property<string>("Description")
                        .HasColumnType("text");
                    b.Property<long>("DiscordID")
                        .HasColumnType("bigint");
                    b.Property<bool>("IsNSFW")
                        .HasColumnType("boolean");
                    b.Property<string>("JoinMessage")
                        .HasColumnType("text");
                    b.Property<bool>("SendJoinMessage")
                        .HasColumnType("boolean");
                    b.Property<bool>("SuppressPermissionWarnings")
                        .HasColumnType("boolean");
                    b.HasKey("ID");
                    b.ToTable("Servers","Core");
                });
            modelBuilder.Entity("DIGOS.Ambassador.Plugins.Core.Model.Users.ServerUser", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
                    b.Property<long>("ServerID")
                        .HasColumnType("bigint");
                    b.Property<long>("UserID")
                        .HasColumnType("bigint");
                    b.HasKey("ID");
                    b.HasIndex("ServerID");
                    b.HasIndex("UserID");
                    b.ToTable("ServerUser","Core");
                });
            modelBuilder.Entity("DIGOS.Ambassador.Plugins.Core.Model.Users.User", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");
                    b.Property<long>("DiscordID")
                        .HasColumnType("bigint");
                    b.Property<int?>("Timezone")
                        .HasColumnType("integer");
                    b.HasKey("ID");
                    b.ToTable("Users","Core");
                });
            modelBuilder.Entity("DIGOS.Ambassador.Plugins.Anonymail.Model.AnonymousMail", b =>
                {
                    b.HasOne("DIGOS.Ambassador.Plugins.Anonymail.Model.AnonymousMailbox", null)
                        .WithMany("Mails")
                        .HasForeignKey("AnonymousMailboxID");
                    b.HasOne("DIGOS.Ambassador.Plugins.Anonymail.Model.AnonymizedUser", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
            modelBuilder.Entity("DIGOS.Ambassador.Plugins.Anonymail.Model.AnonymousMailbox", b =>
                {
                    b.HasOne("DIGOS.Ambassador.Plugins.Core.Model.Servers.Server", "Server")
                        .WithMany()
                        .HasForeignKey("ServerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
            modelBuilder.Entity("DIGOS.Ambassador.Plugins.Anonymail.Model.AnonymousMailboxUser", b =>
                {
                    b.HasOne("DIGOS.Ambassador.Plugins.Anonymail.Model.AnonymousMailbox", "Mailbox")
                        .WithMany("MailboxUsers")
                        .HasForeignKey("MailboxID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                    b.HasOne("DIGOS.Ambassador.Plugins.Anonymail.Model.AnonymizedUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
            modelBuilder.Entity("DIGOS.Ambassador.Plugins.Core.Model.Users.ServerUser", b =>
                {
                    b.HasOne("DIGOS.Ambassador.Plugins.Core.Model.Servers.Server", "Server")
                        .WithMany("KnownUsers")
                        .HasForeignKey("ServerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                    b.HasOne("DIGOS.Ambassador.Plugins.Core.Model.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
